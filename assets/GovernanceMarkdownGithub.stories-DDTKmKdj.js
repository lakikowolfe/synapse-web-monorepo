import{u as o}from"./VerificationSubmission-CNoSrCdk.js";import{g as u,bb as d,bc as l,B as S,bd as f,M as O}from"./useFiles-B8iGcL8P.js";import"./StringUtils-CwQ1lgbR.js";import{h as i,H as n}from"./index-Dk6z2pv_.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-N1ahk8Hu.js";import"./SynapseConstants-Bv2LGAGS.js";import"./OrientationBanner-wBgvkm2W.js";import"./index-DbC0eqpV.js";import"./index-_ua7RM_J.js";import"./iframe-CCwUWes3.js";import"./spreadSx-CwcO6WA9.js";import"./react-BWYrhhjR.js";import"./FullWidthAlert-DcJ9uPE2.js";import"./Alert-DjkyZCFm.js";import"./createTheme-Dv7X0J9j.js";import"./DefaultPropsProvider-BNDjYtxm.js";import"./useSlot-DBwew2p8.js";import"./useForkRef-C1MctNYz.js";import"./createSimplePaletteValueFilter-FtuzOVjX.js";import"./createSvgIcon-OIdd5Six.js";import"./Close-CaJrz68S.js";import"./IconButton-CdyPjgo2.js";import"./useTimeout-wlETIuGB.js";import"./ButtonBase-LPkH4HSZ.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-_lDF_zul.js";import"./Paper-Dmx9m8f5.js";import"./useTheme-CojY1kid.js";import"./useTheme-C6oZUq1l.js";import"./Stack-BuPBuKY_.js";import"./extendSxProp-4uqTjkOV.js";import"./getThemeProps-CMOKEKiQ.js";import"./Box-N4f6UJDY.js";import"./AlertTitle-Hq4Mb2ZI.js";import"./Typography-DWjuxWu_.js";import"./index-CoFUKuJt.js";import"./ClickAwayListener-CdBsin_O.js";import"./getReactElementRef-CjQV4kKN.js";import"./index-D73yXCfo.js";import"./index-DEInpL0e.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BjCBc5iQ.js";import"./Tooltip-Dg50xbUf.js";import"./index-BvY2XDNC.js";import"./useControlled-CxUENiZe.js";import"./Popper-CbkkVKai.js";import"./Button-wJp7XZ08.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-BL_vVSiq.js";import"./QueryClientProvider-BxQiManm.js";import"./Link-CAfSbLTK.js";import"./Collapse-mizudac_.js";import"./_baseUniq-DvOGz5Z9.js";import"./_Uint8Array-CietwWHa.js";import"./isArray-CbiaBtQK.js";import"./_getTag-CmAat0Gn.js";import"./isEqual-BhBHzLP9.js";import"./merge-DMLXSLKL.js";import"./_initCloneObject-Cs3pao6J.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-BkzJEMXy.js";import"./inputBaseClasses-BHiDCPXF.js";import"./calculateFriendlyFileSize-B27X_PhU.js";import"./CheckCircleTwoTone-CcxG3Ig0.js";import"./InfoTwoTone-B607NJn4.js";import"./useMutation-DoJgCRvH.js";import"./dayjs.min-D5j2OpQt.js";import"./chunk-AYJ5UCUI-DEmbKjED.js";import"./cloneDeep-CLwgqcCI.js";import"./Skeleton-DLKQK3Ge.js";import"./SkeletonButton-Dzp-4bDA.js";import"./SkeletonInlineBlock-aK8KBjGA.js";import"./SkeletonTable-CaNR-dG2.js";import"./times-DONsF5E2.js";import"./toInteger-BGw6nmpu.js";import"./isSymbol-BunvEDan.js";import"./SkeletonParagraph-C2_woS-A.js";import"./MarkdownSynapse-D3sBTZ8e.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
