import{j as l}from"./jsx-runtime-J8LmzxcM.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-BI5WaB2N.js";import{g as T}from"./handlers-CIwqvn5w.js";import{aF as S,M as a}from"./useFiles-B_xSXmXR.js";import"./OrientationBanner-CWHRIU5l.js";import"./index-w4KlfFGg.js";import"./StringUtils-BXg3aRdm.js";import{l as _}from"./index-i3RUUIfq.js";import{S as E}from"./SynapseFormSubmissionGrid-D9DT8iXG.js";import"./mockSchema-DCIs133Q.js";import"./mockFileEntity-BK_mThDX.js";import"./mock_file_handle-DwnN5i7-.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-_TAnjPcT.js";import"./mockTeam-CWKARPKN.js";import"./SynapseConstants-CwskSrtE.js";import"./uniqueId-CV9sHfgS.js";import"./toString-64kSU8yp.js";import"./isObjectLike-BmVguDK8.js";import"./iframe-DHjlMvoh.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-WCqXLzWk.js";import"./times-CbDmmAob.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-C-BVQ4Ls.js";import"./asyncJobHandlers-ND_DouZF.js";import"./BasicMockedCrudService-B838-pMr.js";import"./cloneDeep-DoWg_E5X.js";import"./_Uint8Array-CT7Ow10W.js";import"./_initCloneObject-CdnCFk_k.js";import"./_getTag-Cnzq9Q2L.js";import"./isEqual-CZA66GsT.js";import"./_baseIsEqual-BXwvZ3xj.js";import"./mockAnnotationColumns-BUJ8Y-3F.js";import"./tableQueryHandlers-DwiADOqs.js";import"./omit-Ci-rwj-j.js";import"./_baseGet-KrjuY7X7.js";import"./isNil-vqhrspiG.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-BjSSQWzY.js";import"./_baseFlatten-BrjtmYcE.js";import"./pick-EGiUQnmf.js";import"./_baseSet-gBhwhWAQ.js";import"./hasIn-CGTMC-kN.js";import"./accessRequirementAclHandlers-B9d_WSKD.js";import"./mockAccessRequirementAcls-DKw6IHPK.js";import"./mockAccessRequirements-DaNUz_hs.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-5OtZEItt.js";import"./accessRequirementHandlers-Bg92wWEe.js";import"./wikiHandlers-CVI9jQ8B.js";import"./mockWikiPageKey-tQ_pXqCw.js";import"./teamHandlers-C2x-APFQ.js";import"./dataAccessRequestHandlers-DsPG0IOm.js";import"./MockResearchProject-BiQ4sKs4.js";import"./mock_discussion-sdxMf_zD.js";import"./fakerUtils-CltsX75F.js";import"./index-D2SgmrOF.js";import"./mockTableEntity-6i228ZES.js";import"./mockFileEntityACLVariants-2zjD7GVl.js";import"./entityHandlers-BBJ889pU.js";import"./mockEntity-D0DzY4x6.js";import"./mockEvaluationQueue-Cgj6N5fa.js";import"./featureFlagHandlers-jODp_5_o.js";import"./fileHandlers-DUTbvPKb.js";import"./personalAccessTokenHandlers-CMFJpUSt.js";import"./researchProjectHandlers-CFf9yrtq.js";import"./resetTwoFactorAuthHandlers-BHb_NhhC.js";import"./userProfileHandlers-9mtx7oCY.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-BB2sJPj0.js";import"./FullWidthAlert-C30KN8xJ.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-BOZGohyZ.js";import"./createTheme-B5jDAUkm.js";import"./resolveComponentProps-1wnzLdW_.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-en9h5boq.js";import"./createSvgIcon-V0KlQ9Vq.js";import"./DefaultPropsProvider-HByegv8E.js";import"./Close-C6m_fk2M.js";import"./IconButton-B0ToW79y.js";import"./ButtonBase-Zy6_PQlA.js";import"./useTimeout-rekSewsX.js";import"./useIsFocusVisible-B8GJ3ILl.js";import"./useEventCallback-X_1b1bFu.js";import"./Paper-C_v3_MPZ.js";import"./Stack-Bj3ZSgf1.js";import"./getThemeProps-BfKvM1_V.js";import"./useTheme-BsYdX0yo.js";import"./Box-BKG1AAgH.js";import"./AlertTitle-BcNZm7Ru.js";import"./Typography-DQAlW-NO.js";import"./useTheme-CY7cQsuX.js";import"./Grow-CWiU5o6y.js";import"./index--NsX-5Ju.js";import"./utils-BXLLkLzq.js";import"./ClickAwayListener-lcK2grUT.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-cjwU-86R.js";import"./index-DKtiQNKb.js";import"./useControlled-gac5YXq7.js";import"./useId-T5i9QPOu.js";import"./Popper-DjZO7_qd.js";import"./Button-D6Yeisf2.js";import"./useQuery-BtSCUure.js";import"./utils-Bd6kc1Ou.js";import"./Link-lo45V4bc.js";import"./Collapse-Btj7iVIY.js";import"./tinycolor-Begke6kS.js";import"./Fade-DoU4kqmW.js";import"./Skeleton-DdI72mVD.js";import"./inputBaseClasses-CzksuyV9.js";import"./calculateFriendlyFileSize-DwPSXRtB.js";import"./CheckCircleTwoTone-CchasTxV.js";import"./InfoTwoTone-llY9trof.js";import"./useMutation-DyWBnHp3.js";import"./dayjs.min-lzyg-c11.js";import"./chunk-AYJ5UCUI-C31SFKF5.js";import"./index-B3fXTnZS.js";import"./react-VPSgbN1X.js";import"./util-CSXjsJOH.js";import"./WideButton-CMUFfda7.js";import"./DeleteTwoTone-Dg7E6AXP.js";import"./createSvgIcon-DmE_k4Yc.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-DhWZq82n.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-26Uosb0o.js";import"./DialogBase-z-rukzRY.js";import"./Close-Bf0WfUur.js";import"./HelpPopover-CYsuoJ1E.js";import"./MarkdownPopover-BLCaGp1S.js";import"./LightTooltip-91lEvqz6.js";import"./MarkdownSynapse-CA3hBiPu.js";import"./SkeletonButton-CZgHjnWn.js";import"./SkeletonInlineBlock-BGhGjKYC.js";import"./SkeletonTable-BDD_QzCl.js";import"./SkeletonParagraph-DAiS1MW4.js";import"./HelpOutlineTwoTone-xkOdjNRx.js";import"./DialogTitle-Yaq-Jq9Q.js";import"./DialogContent-D2Go6feo.js";import"./Dialog-GNJ6nXNh.js";import"./Modal-BYDPDtOS.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-CgHY3vm9.js";import"./WarningDialog-Dan3xc9c.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
