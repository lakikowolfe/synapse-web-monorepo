import{j as l}from"./jsx-runtime-DR4tA_9P.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-D_53E-8F.js";import{aH as S,M as a}from"./useFiles-Bwg0s9f_.js";import"./OrientationBanner-D6g2n9Ed.js";import"./index-Vg79BID-.js";import"./StringUtils-lE31obNl.js";import{l as _}from"./index-RzTrTYSO.js";import{S as E}from"./SynapseFormSubmissionGrid-D1OyWO63.js";import"./mockSchema-DSyMSWb9.js";import"./mockFileEntity-foKiks_C.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-DAUZcLNo.js";import"./mockTeam-CGqDvC-Z.js";import"./SynapseConstants-CC0rfazt.js";import"./uniqueId-BktkPOeG.js";import"./toString-BX2rTywS.js";import"./isObjectLike-CG8Lv5Yt.js";import"./iframe-CFDjoW5s.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-izKfuV_7.js";import"./times-DG7oOr4e.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-KeGnbqiY.js";import"./asyncJobHandlers-DcTFsBWC.js";import"./BasicMockedCrudService-CARuD13h.js";import"./cloneDeep-VFlbVhYR.js";import"./_Uint8Array-D4FAVcjH.js";import"./_initCloneObject-B8S0M8p_.js";import"./_getTag-Bm-7XfiV.js";import"./isEqual-BBn7n2HH.js";import"./_baseIsEqual-POOioTDn.js";import"./mockAnnotationColumns-DgFycBRD.js";import"./tableQueryHandlers-D1x1QztZ.js";import"./omit-_F2zU2vI.js";import"./_baseGet-BNFmPbfW.js";import"./isNil-FLY8Au3U.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-Cs-r_5th.js";import"./_baseFlatten-DiL3j230.js";import"./pick-CND4XAML.js";import"./_baseSet-C5_It1uU.js";import"./hasIn-CQFVIukG.js";import"./accessRequirementAclHandlers-DsUS4r_e.js";import"./mockAccessRequirementAcls-D7dPmabE.js";import"./mockAccessRequirements-DDa2V1mD.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-9ekiSNgc.js";import"./wikiHandlers-DBFRqQnI.js";import"./mockWikiPageKey-BmbFSru9.js";import"./teamHandlers-F5JiT-nP.js";import"./dataAccessRequestHandlers-DZ5uTAcC.js";import"./MockResearchProject-Ddo2E641.js";import"./mock_discussion-CdoOBzNC.js";import"./fakerUtils-Bey0MtnT.js";import"./index-EUmLfoec.js";import"./mockTableEntity-BxgQOfFA.js";import"./mockFileEntityACLVariants-COhv5OHp.js";import"./entityHandlers-DK_ItbxD.js";import"./mockEntity-CXITVxKl.js";import"./mockEvaluationQueue-C_Dqd39L.js";import"./featureFlagHandlers-CvykZEEG.js";import"./fileHandlers-YMeLZIqs.js";import"./personalAccessTokenHandlers-l2CsunSb.js";import"./researchProjectHandlers-DmgyfBDO.js";import"./resetTwoFactorAuthHandlers-CJ6myYzs.js";import"./userProfileHandlers-2GjCeL7S.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-BzNTPzjo.js";import"./FullWidthAlert-DUYwRGp_.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-DbEi88XW.js";import"./createTheme-DXmTCCCj.js";import"./resolveComponentProps-CedEO8KE.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-63n_0gwC.js";import"./createSvgIcon-9LdlP7Pe.js";import"./DefaultPropsProvider-DEgZ9IxH.js";import"./Close-bzmN7BlE.js";import"./IconButton-DDnvOzB0.js";import"./ButtonBase-Bp4tlF7M.js";import"./useTimeout-Bmchsjft.js";import"./useIsFocusVisible-B83Pi7Rh.js";import"./useEventCallback-C5p3MRGc.js";import"./Paper-DVO33gFY.js";import"./Stack-BLi-xU46.js";import"./getThemeProps-BcJTOhRM.js";import"./useTheme-BwrFdNA1.js";import"./Box-Dx0zJWvv.js";import"./AlertTitle-PUy9LFc0.js";import"./Typography-CaIHMzUk.js";import"./useTheme-CsEanI0A.js";import"./Grow--OkInp2b.js";import"./index-BOC6r9lG.js";import"./utils-CeLCQfAC.js";import"./ClickAwayListener-mcCXQhRy.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-Eupu-pPA.js";import"./index-D_Bz3QI0.js";import"./useControlled-CCdnr4Dv.js";import"./useId-vp5UP7jH.js";import"./Popper-DZ7-s0Kz.js";import"./Button-DA8RCH2U.js";import"./useQuery-DD6Qx8YL.js";import"./utils-CzjhUDee.js";import"./Link-B9q2Qbuh.js";import"./Collapse-B0rWqOPL.js";import"./tinycolor-Begke6kS.js";import"./Fade-D9T8AoT0.js";import"./Skeleton-B_OQBy-8.js";import"./inputBaseClasses-DIzPzOvk.js";import"./calculateFriendlyFileSize-CZUPi2gZ.js";import"./CheckCircleTwoTone-CschQz1p.js";import"./InfoTwoTone-Dn-ZYr7l.js";import"./mutation-2Oe4VFYe.js";import"./dayjs.min-Dofo-31o.js";import"./chunk-AYJ5UCUI-DXwcYtNa.js";import"./index-Ce5YK_VT.js";import"./react-Cy1cZ39D.js";import"./util-4ytLFYtR.js";import"./WideButton-BztQ5AmS.js";import"./DeleteTwoTone-Dq7SkcjU.js";import"./createSvgIcon-BSHKZaAv.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-RfNWVYbf.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-CxEsurEi.js";import"./DialogBase-D_XNuvVS.js";import"./Close-8i5tZrS2.js";import"./HelpPopover-C80HPq38.js";import"./MarkdownPopover-BrxYD_J-.js";import"./LightTooltip-B4YOZbBt.js";import"./MarkdownSynapse-B6u4nxrQ.js";import"./SkeletonButton-Qs0IclQY.js";import"./SkeletonInlineBlock-BZCQXU9M.js";import"./SkeletonTable-knmiGeb6.js";import"./SkeletonParagraph-Bn9ZVxWe.js";import"./HelpOutlineTwoTone-DleXlZRs.js";import"./DialogTitle-Dojb9rux.js";import"./DialogContent-tsJ-K9fU.js";import"./Dialog-BJvN67Ls.js";import"./Modal-DWiLmD6l.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-CnDaYanC.js";import"./WarningDialog-D8wEnygl.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
