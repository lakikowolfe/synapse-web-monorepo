import{j as l}from"./jsx-runtime-DgXUeXrV.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DHPhgAH7.js";import{g as T}from"./handlers-BYMppIqh.js";import{aF as S,M as a}from"./useFiles-Ds9iGu-J.js";import"./OrientationBanner-sEjzdHT2.js";import"./index-DNYajJt4.js";import"./StringUtils-Bj0SG9ce.js";import{l as _}from"./index-Bbych7St.js";import{S as E}from"./SynapseFormSubmissionGrid-BUb3eew2.js";import"./mockSchema-DPtrbzp5.js";import"./mockFileEntity-Df_1u6Ie.js";import"./mock_file_handle-C2NjfX48.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-Btdgh6T7.js";import"./mockTeam-BnoCqEqU.js";import"./SynapseConstants-BtzEZQ3v.js";import"./uniqueId-B8dnEuPq.js";import"./toString-C_jpwJNq.js";import"./isObjectLike-C2bTK4BQ.js";import"./iframe-BFG7XEN4.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-COIQsxX4.js";import"./times-DK8jmPYh.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-2sm56FnW.js";import"./asyncJobHandlers-B8nVRPSd.js";import"./BasicMockedCrudService-CZ70tL4r.js";import"./cloneDeep-DvGxmva1.js";import"./_Uint8Array-D4QUxGuU.js";import"./_initCloneObject-DJr2U3nk.js";import"./_getTag-DppqRXvs.js";import"./isEqual-DO-FUjN-.js";import"./_baseIsEqual-HogoNuq1.js";import"./mockAnnotationColumns-DlTh8JGg.js";import"./tableQueryHandlers-5CL9xV2o.js";import"./omit-Ddcun8cU.js";import"./_baseGet-ByZTmSeK.js";import"./isNil-D0hKcBfH.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-BJhYPbVH.js";import"./_baseFlatten-at6OGxK-.js";import"./pick-CUPhWyl9.js";import"./_baseSet-DBC_3ZT1.js";import"./hasIn-4Zs5QgY9.js";import"./accessRequirementAclHandlers-B1TWIPZj.js";import"./mockAccessRequirementAcls-BXcPN2fy.js";import"./mockAccessRequirements-ZpQjsgPu.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DiBhlaV-.js";import"./accessRequirementHandlers-q3U9x-Lm.js";import"./wikiHandlers-Cj0JLybB.js";import"./mockWikiPageKey-BLYR6AfQ.js";import"./teamHandlers-CX3xyL_n.js";import"./dataAccessRequestHandlers-BjOAXJjY.js";import"./MockResearchProject-BaAB2K-a.js";import"./mock_discussion-DaVJTTfr.js";import"./fakerUtils-BXXuoOdy.js";import"./index-DF7yN7NE.js";import"./mockTableEntity-CkUOYMuz.js";import"./mockFileEntityACLVariants-izKJTyWu.js";import"./entityHandlers-DI3tPuK8.js";import"./mockEntity-C-jWEx4p.js";import"./mockEvaluationQueue-DdqEDnyw.js";import"./featureFlagHandlers-_Dsoj-ur.js";import"./fileHandlers-CK1QyHFC.js";import"./personalAccessTokenHandlers-B7sovzNl.js";import"./researchProjectHandlers-BkiUHd5v.js";import"./resetTwoFactorAuthHandlers-D592EnWz.js";import"./userProfileHandlers-DYkCOA_n.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-Ws1iJWHd.js";import"./FullWidthAlert-BmsStTN7.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-Dq9dqTyO.js";import"./createTheme-BnR6VDwz.js";import"./resolveComponentProps-CMpMeHlq.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-EOHO42VY.js";import"./createSvgIcon-C0V79X_t.js";import"./DefaultPropsProvider-D91nxuKE.js";import"./Close-D1qDXkgU.js";import"./IconButton-TRF0fw9v.js";import"./ButtonBase-kMafs3ZH.js";import"./useTimeout-Dwal47qt.js";import"./useIsFocusVisible-CYTOP6DT.js";import"./useEventCallback-DbNdZLPa.js";import"./Paper-Bb_IVGOL.js";import"./Stack-DGetwxNI.js";import"./getThemeProps-CTJSO-h_.js";import"./useTheme-0X8He3Jf.js";import"./Box-BiQ94yKd.js";import"./AlertTitle-BZxRqgba.js";import"./Typography-DOK0zznv.js";import"./useTheme-mp-WflMx.js";import"./Grow-GHNX6R_F.js";import"./index-BiPuD5mw.js";import"./utils-D11Cwa0K.js";import"./ClickAwayListener-6B2KNGGV.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-DBH8_9eY.js";import"./index-Dvgf8y9s.js";import"./useControlled-D24p52r-.js";import"./useId-kwxvaFuc.js";import"./Popper-BsXe8Yg0.js";import"./Button-B8ygMq8k.js";import"./useQuery-CTuOVL31.js";import"./utils-CCiraw5q.js";import"./Link-DvC6GJf8.js";import"./Collapse-B_wPnWsY.js";import"./tinycolor-Begke6kS.js";import"./Fade-CDgqfTrF.js";import"./Skeleton-BQOz6PNX.js";import"./inputBaseClasses-_yHk5MKC.js";import"./calculateFriendlyFileSize-C9Q8-tH3.js";import"./CheckCircleTwoTone-Rk5ugqpo.js";import"./InfoTwoTone-A0lNafO0.js";import"./useMutation-Bucg5_wJ.js";import"./dayjs.min-BZYQtBUG.js";import"./chunk-AYJ5UCUI-B8ZPpuJL.js";import"./index-uBzytXzk.js";import"./react-CASrN-wO.js";import"./util-T0h5Z1Q0.js";import"./WideButton-DBdN50o3.js";import"./DeleteTwoTone-B6Mgv8yL.js";import"./createSvgIcon-_ZpttoQc.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-rEy5TMaU.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-CoCNghsD.js";import"./DialogBase-Bv8ThAny.js";import"./Close-CsvXX7la.js";import"./HelpPopover-CiUDZpgW.js";import"./MarkdownPopover-CgRTS-re.js";import"./LightTooltip-Bxlshoie.js";import"./MarkdownSynapse-CeiY_SGy.js";import"./SkeletonButton-F5TzsRV0.js";import"./SkeletonInlineBlock-D9texr-u.js";import"./SkeletonTable-cx1gEjYW.js";import"./SkeletonParagraph-BuxuUNVA.js";import"./HelpOutlineTwoTone-DJmLVQ4s.js";import"./DialogTitle-U7902lUX.js";import"./DialogContent-CsUZGoBY.js";import"./Dialog-BHqd6FWA.js";import"./Modal-CdRxbzc5.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-D1hH5Yp6.js";import"./WarningDialog-DTVZIWuX.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
