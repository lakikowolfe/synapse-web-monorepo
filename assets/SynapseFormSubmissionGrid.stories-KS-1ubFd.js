import{j as l}from"./jsx-runtime-K2fqsMI1.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-C_GqaAhu.js";import{aH as S,M as a}from"./useFiles-Z5-hGPsU.js";import"./OrientationBanner-CxPcUhkX.js";import"./index-BF-TFGr6.js";import"./StringUtils-lE31obNl.js";import{l as _}from"./index-BtJS2t6d.js";import{S as E}from"./SynapseFormSubmissionGrid-cnosSkti.js";import"./mockSchema-CfXwUKIs.js";import"./mockFileEntity-BVe00NOO.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-DYDc8K7W.js";import"./mockTeam-DQldfPlU.js";import"./SynapseConstants-B_tgEFoi.js";import"./uniqueId-o2D8FNZw.js";import"./toString-Dh-ZC1rt.js";import"./isObjectLike-D9T7B50e.js";import"./iframe-CduSda18.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-cHLQiUDv.js";import"./times-BVopGqFr.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-CcDCAdmk.js";import"./asyncJobHandlers-DJb4_b6F.js";import"./BasicMockedCrudService-BuipOqrm.js";import"./cloneDeep-BVPhsa5y.js";import"./_Uint8Array-Qe-AOk_D.js";import"./_initCloneObject-C68wD5Vv.js";import"./_getTag-B3HsDC7G.js";import"./isEqual-DMqmt8Qo.js";import"./_baseIsEqual-DHB_eETG.js";import"./mockAnnotationColumns-Q1TsT4XG.js";import"./tableQueryHandlers-BccH6aUw.js";import"./omit-BhPwxWx2.js";import"./_baseGet-CHzuo8jZ.js";import"./isNil-Bpym3iET.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-B9RYE8Kl.js";import"./_baseFlatten-CdXtJnNG.js";import"./pick-DAAt86xw.js";import"./_baseSet-BAqudLl2.js";import"./hasIn-jvOF-Qoi.js";import"./accessRequirementAclHandlers-c7JjRs3y.js";import"./mockAccessRequirementAcls-CkPk0Lz6.js";import"./mockAccessRequirements-DcHeMrbN.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-BH6poX0J.js";import"./wikiHandlers-CgR-flEO.js";import"./mockWikiPageKey-D3cR6_uU.js";import"./teamHandlers-Dsm-sOMp.js";import"./dataAccessRequestHandlers-BM--Av2i.js";import"./MockResearchProject-DUleUTF0.js";import"./mock_discussion-BWrd_Rmt.js";import"./fakerUtils-D7pTrMng.js";import"./index-BuFuSIzj.js";import"./mockTableEntity-XD9VBiUe.js";import"./mockFileEntityACLVariants-B3GiaEHS.js";import"./entityHandlers-CcHEkN7r.js";import"./mockEntity-BLr6hZs5.js";import"./mockEvaluationQueue-nlOa5ITg.js";import"./featureFlagHandlers-Cs1I9D35.js";import"./fileHandlers-DGpqPMaG.js";import"./personalAccessTokenHandlers-Cd6JMua4.js";import"./researchProjectHandlers-CyGteWFR.js";import"./resetTwoFactorAuthHandlers-s7JYdwR9.js";import"./userProfileHandlers-CRgogb2H.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-OzWqrcBy.js";import"./FullWidthAlert-C7tYBYpO.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-DoLuuX1K.js";import"./createTheme-fNsUonXl.js";import"./resolveComponentProps-DvJnYw6b.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-WQZqeZhB.js";import"./createSvgIcon-CRycykR-.js";import"./DefaultPropsProvider-pkj_z4mc.js";import"./Close-CtnschHy.js";import"./IconButton-yNyfERvq.js";import"./ButtonBase-HHO57Pnd.js";import"./useTimeout-DI2Gx5la.js";import"./useIsFocusVisible-RY2eniDj.js";import"./useEventCallback-b14gmjlt.js";import"./Paper-CBPY2_ME.js";import"./Stack-w5S_lSZ-.js";import"./getThemeProps-BpHqemHI.js";import"./useTheme-BV4ngjpd.js";import"./Box-B5j1LXc8.js";import"./AlertTitle-CJo_OcY2.js";import"./Typography-Cs0IiwfE.js";import"./useTheme-BnvDC3Cc.js";import"./Grow-teO_iWl5.js";import"./index-DVGoONCX.js";import"./utils-Bcb2eLt2.js";import"./ClickAwayListener-BndowNQw.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-BcdnjFX2.js";import"./index-v-kyJxW4.js";import"./useControlled-DbZ2ahWR.js";import"./useId-DYwP7KU_.js";import"./Popper-dJS5SO_Y.js";import"./Button-JCjg7Upf.js";import"./useQuery-KKIcYF_X.js";import"./utils-DIfgLFBq.js";import"./Link-Dbnlm_65.js";import"./Collapse-POhtEGak.js";import"./tinycolor-Begke6kS.js";import"./Fade-NKvmRFmW.js";import"./Skeleton-ioLcvLoL.js";import"./inputBaseClasses-BDlfCoGX.js";import"./calculateFriendlyFileSize-B889KYnv.js";import"./CheckCircleTwoTone-xHXjx-id.js";import"./InfoTwoTone-G73G5jpY.js";import"./mutation-BvTYFNUq.js";import"./dayjs.min-Dlwyit3L.js";import"./chunk-AYJ5UCUI-By9W3JJY.js";import"./index-BYwNUEh3.js";import"./react-pB_ySTRt.js";import"./util-C952amXl.js";import"./WideButton-KWPvUOZh.js";import"./DeleteTwoTone-B-hbGFHo.js";import"./createSvgIcon-BdK8v5tf.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-dCJv8erS.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-B-cTfMx1.js";import"./DialogBase-Cifj_taa.js";import"./Close-o-NsMcuK.js";import"./HelpPopover-kVxQ-wru.js";import"./MarkdownPopover-D-Ydksr_.js";import"./LightTooltip-BR8KtiAe.js";import"./MarkdownSynapse-B5y5NY56.js";import"./SkeletonButton-p6W8NDgX.js";import"./SkeletonInlineBlock-C17-wCtN.js";import"./SkeletonTable-Dm7Y5ZaJ.js";import"./SkeletonParagraph-WMYr-02e.js";import"./HelpOutlineTwoTone-CSE8Hy7v.js";import"./DialogTitle-uAB0T7eJ.js";import"./DialogContent-Byx622Vm.js";import"./Dialog-OH7DnvgN.js";import"./Modal-BuD41FcD.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-CkWOUxEa.js";import"./WarningDialog-ZrJ1RvHB.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
