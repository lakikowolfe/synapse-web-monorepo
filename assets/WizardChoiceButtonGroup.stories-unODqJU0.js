import{j as i}from"./jsx-runtime-J8LmzxcM.js";import{W as m,a as t}from"./WizardChoiceButton-CZ6xm85F.js";import{I as l}from"./LayersTwoTone-CM7zxf88.js";import{F as d}from"./IconSvg-rnFIooXB.js";import"./index-w4KlfFGg.js";import"./iframe-DHjlMvoh.js";import"./Box-BKG1AAgH.js";import"./createTheme-B5jDAUkm.js";import"./useTheme-BsYdX0yo.js";import"./Typography-DQAlW-NO.js";import"./DefaultPropsProvider-HByegv8E.js";import"./createSvgIcon-V0KlQ9Vq.js";import"./spreadSx-CwcO6WA9.js";import"./useTheme-CY7cQsuX.js";import"./Tooltip-cjwU-86R.js";import"./index-DKtiQNKb.js";import"./Grow-CWiU5o6y.js";import"./resolveComponentProps-1wnzLdW_.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-en9h5boq.js";import"./index--NsX-5Ju.js";import"./utils-BXLLkLzq.js";import"./TransitionGroupContext-BB2sJPj0.js";import"./useEventCallback-X_1b1bFu.js";import"./useTimeout-rekSewsX.js";import"./useControlled-gac5YXq7.js";import"./useId-T5i9QPOu.js";import"./useIsFocusVisible-B8GJ3ILl.js";import"./Popper-DjZO7_qd.js";import"./ownerDocument-DW-IO8s5.js";import"./ContentCopyTwoTone-B4Cb48ev.js";import"./HelpOutlineTwoTone-xkOdjNRx.js";import"./ErrorOutlined-C7dgC7EU.js";import"./GetAppTwoTone-C9Uk9wOb.js";import"./InfoOutlined-Bwfc5qzm.js";import"./DeleteTwoTone-Hk1QJtLg.js";import"./CheckCircleTwoTone-CchasTxV.js";const V={title:"UI/WizardChoiceButtonGroup",component:m,parameters:{design:{type:"figma",url:"https://www.figma.com/file/vLusb6uSfhx45OyFx5IHwy/(XDM)-Extensible-Data-Management-Comps?type=design&node-id=2955-29513&mode=design&t=Dhbz59ySu37vSy4e-4"}}},e={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"'Classic' Access Requirement",description:"These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option."}),i.jsx(t,{title:"DUO Access Requirement",description:"The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features."})]})}},o={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"File",description:"Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.",icon:i.jsx(l,{fontSize:"large"})}),i.jsx(t,{title:"Folder or Directory",description:'Select this option for "Folder or Directory".',icon:i.jsx(d,{fontSize:"large"})})]})}};var r,s,n;e.parameters={...e.parameters,docs:{...(r=e.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={"'Classic' Access Requirement"} description={'These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option.'} />
        <WizardChoiceButton title={'DUO Access Requirement'} description={'The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features.'} />
      </>
  }
}`,...(n=(s=e.parameters)==null?void 0:s.docs)==null?void 0:n.source}}};var a,c,p;o.parameters={...o.parameters,docs:{...(a=o.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={'File'} description={'Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.'} icon={<InsertDriveFileTwoTone fontSize={'large'} />} />
        <WizardChoiceButton title={'Folder or Directory'} description={'Select this option for "Folder or Directory".'} icon={<FolderTwoTone fontSize={'large'} />} />
      </>
  }
}`,...(p=(c=o.parameters)==null?void 0:c.docs)==null?void 0:p.source}}};const Y=["Basic","WithIcons"];export{e as Basic,o as WithIcons,Y as __namedExportsOrder,V as default};
